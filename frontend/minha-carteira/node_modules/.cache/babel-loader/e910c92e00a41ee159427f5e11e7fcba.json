{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PICHAU\\\\Desktop\\\\estudosProg\\\\dashboard\\\\minha-carteira\\\\src\\\\pages\\\\List\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { Container, Content, Filters } from './styles';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport HistoryFinanceCard from '../../components/HistoryFinanceCard';\nimport gains from '../../repositories/gains';\nimport expenses from '../../repositories/expenses';\nimport formatCurrent from '../../utils/formatCurrent';\nimport formatDate from '../../utils/formatDate';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nconst List = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [monthSelect, setMonthSelected] = useState(String(new Date().getMonth() + 1));\n  const [yearSelect, setYearSelected] = useState(String(new Date().getMonth() + 1));\n  let params = useParams();\n  const title = useMemo(() => {\n    return params.type === 'entry-balance' ? 'Entradas' : 'Saídas';\n  }, [params.type]);\n  const lineColor = useMemo(() => {\n    return params.type === 'entry-balance' ? '#f7931b' : '#e44c4e';\n  }, [params.type]);\n  const listData = useMemo(() => {\n    return params.type === 'entry-balance' ? gains : expenses;\n  }, []);\n  const months = [{\n    value: 1,\n    label: 'Janeiro'\n  }, {\n    value: 2,\n    label: 'Fevereiro'\n  }, {\n    value: 3,\n    label: 'Março'\n  }];\n  const years = [{\n    value: 2021,\n    label: 2021\n  }, {\n    value: 2020,\n    label: 2020\n  }, {\n    value: 2022,\n    label: 2022\n  }];\n  useEffect(() => {\n    const response = listData.map(item => {\n      return {\n        id: String(Math.random() * data.length),\n        description: item.description,\n        amountFormatted: formatCurrent(Number(item.amount)),\n        frequency: item.frequency,\n        dataFormatted: formatDate(item.date),\n        tagColor: item.frequency === 'recorrente' ? '#4e41f0' : '#e44c4e'\n      };\n    });\n    setData(response);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ContentHeader, {\n      title: title,\n      lineColor: lineColor,\n      children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n        options: months,\n        onChange: e => setMonthSelected(e.target.value),\n        defaultValue: monthSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        options: years,\n        onChange: e => setYearSelected(e.target.value),\n        defaultValue: yearSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"tag-filter tag-filter-recurrent\",\n        children: \"Recorrentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"tag-filter tag-filter-eventual\",\n        children: \"Eventuais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(HistoryFinanceCard, {\n        tagColor: item.tagColor,\n        title: item.description,\n        subtitle: item.dataFormatted,\n        amount: item.amountFormatted\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(List, \"e/Fuv8s1MFUiSE1gxFKQ2IukN/Y=\", false, function () {\n  return [useParams];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/PICHAU/Desktop/estudosProg/dashboard/minha-carteira/src/pages/List/index.tsx"],"names":["React","useMemo","useState","useEffect","Container","Content","Filters","ContentHeader","SelectInput","HistoryFinanceCard","gains","expenses","formatCurrent","formatDate","useParams","List","data","setData","monthSelect","setMonthSelected","String","Date","getMonth","yearSelect","setYearSelected","params","title","type","lineColor","listData","months","value","label","years","response","map","item","id","Math","random","length","description","amountFormatted","Number","amount","frequency","dataFormatted","date","tagColor","e","target"],"mappings":"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","sourcesContent":["\r\nimport React, {useMemo, useState, useEffect} from 'react';\r\n\r\nimport { Container, Content, Filters } from './styles';\r\n\r\nimport ContentHeader from '../../components/ContentHeader';\r\nimport SelectInput from '../../components/SelectInput';\r\nimport HistoryFinanceCard from '../../components/HistoryFinanceCard';\r\n\r\nimport gains from '../../repositories/gains';\r\nimport expenses from '../../repositories/expenses';\r\n\r\nimport formatCurrent from '../../utils/formatCurrent';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\ninterface IData {\r\n    id: string;\r\n    description: string;\r\n    amountFormatted: string;\r\n    frequency: string;\r\n    dataFormatted: string;\r\n    tagColor: string;\r\n};\r\n\r\nconst List: React.FC = () => {\r\n\r\n    const [data, setData] = useState<IData[]>([]);\r\n    const [monthSelect, setMonthSelected] = useState<string>(String(new Date().getMonth() + 1));\r\n    const [yearSelect, setYearSelected] = useState<string>(String(new Date().getMonth() + 1));\r\n\r\n    let params = useParams();\r\n\r\n    const title = useMemo(() => {\r\n        return params.type === 'entry-balance' ? 'Entradas' : 'Saídas'\r\n    }, [params.type]);\r\n\r\n    const lineColor = useMemo(() => {\r\n        return params.type === 'entry-balance' ? '#f7931b' : '#e44c4e'\r\n    }, [params.type]);\r\n\r\n    const listData = useMemo(() => {\r\n        return params.type === 'entry-balance' ? gains : expenses;\r\n    },[]);\r\n\r\n    const months = [\r\n        {value: 1, label: 'Janeiro'},\r\n        {value: 2, label: 'Fevereiro'},\r\n        {value: 3, label: 'Março'},\r\n    ]\r\n\r\n    const years = [\r\n        {value: 2021, label: 2021},\r\n        {value: 2020, label: 2020},\r\n        {value: 2022, label: 2022},\r\n    ]\r\n\r\n    useEffect(() => {\r\n\r\n        const response = listData.map(item => {\r\n            return {\r\n                id: String(Math.random() * data.length),\r\n                description: item.description,\r\n                amountFormatted: formatCurrent(Number(item.amount)),\r\n                frequency: item.frequency,\r\n                dataFormatted: formatDate(item.date),\r\n                tagColor: item.frequency === 'recorrente' ? '#4e41f0' : '#e44c4e'\r\n            }\r\n        })\r\n        setData(response);\r\n    },[]);\r\n\r\n    return (\r\n        <Container>\r\n            <ContentHeader title={title} lineColor={lineColor}>\r\n                <SelectInput options={months} onChange={(e) => setMonthSelected(e.target.value)} defaultValue={monthSelect}/>\r\n                <SelectInput options={years} onChange={(e) => setYearSelected(e.target.value)} defaultValue={yearSelect}/>\r\n            </ContentHeader>\r\n\r\n            <Filters>\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"tag-filter tag-filter-recurrent\"\r\n                >\r\n                    Recorrentes\r\n                </button>\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"tag-filter tag-filter-eventual\"\r\n                >\r\n                    Eventuais\r\n                </button>\r\n            </Filters>\r\n\r\n            <Content>\r\n                {\r\n                    data.map(item => (\r\n                        <HistoryFinanceCard\r\n                            key={item.id}\r\n                            tagColor={item.tagColor}\r\n                            title={item.description}\r\n                            subtitle={item.dataFormatted}\r\n                            amount={item.amountFormatted}\r\n                        />\r\n                    ))\r\n                    \r\n                }\r\n            </Content>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}