{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joao\\\\Desktop\\\\dashboard\\\\minha-carteira\\\\src\\\\pages\\\\List\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { Container, Content, Filters, AddButtonContainer } from './styles';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport HistoryFinanceCard from '../../components/HistoryFinanceCard';\nimport AddButton from '../../components/AddButton';\nimport gains from '../../repositories/gains';\nimport expenses from '../../repositories/expenses';\nimport formatCurrent from '../../utils/formatCurrent';\nimport formatDate from '../../utils/formatDate';\nimport AddFlowModal from '../../components/AddFlowModal';\nimport { useModal } from '../../components/AddFlowModal/useModal';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nconst List = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [monthSelect, setMonthSelected] = useState(new Date().getMonth() + 1);\n  const [yearSelect, setYearSelected] = useState(new Date().getFullYear());\n  const [frequencyFilterSelected, setfrequencyFilterSelected] = useState(['recorrente', 'eventual']);\n  let params = useParams();\n  const pageData = useMemo(() => {\n    return params.type === 'entry-balance' ? {\n      title: 'Entradas',\n      lineColor: '#4e41f0',\n      data: gains\n    } : {\n      title: 'Saídas',\n      lineColor: '#e44c4e',\n      data: expenses\n    };\n  }, [params.type]);\n  const months = [{\n    value: 1,\n    label: 'Janeiro'\n  }, {\n    value: 2,\n    label: 'Fevereiro'\n  }, {\n    value: 3,\n    label: 'Março'\n  }, {\n    value: 4,\n    label: 'Abril'\n  }, {\n    value: 5,\n    label: 'Maio'\n  }, {\n    value: 6,\n    label: 'Junho'\n  }, {\n    value: 7,\n    label: 'Julho'\n  }, {\n    value: 8,\n    label: 'Agosto'\n  }, {\n    value: 9,\n    label: 'Setembro'\n  }, {\n    value: 10,\n    label: 'Outubro'\n  }, {\n    value: 11,\n    label: 'Março'\n  }, {\n    value: 12,\n    label: 'Dezembro'\n  }];\n  const years = [{\n    value: 2021,\n    label: 2021\n  }, {\n    value: 2020,\n    label: 2020\n  }, {\n    value: 2022,\n    label: 2022\n  }];\n\n  const handleFrequencyClick = frequency => {\n    const alreadySelected = frequencyFilterSelected.findIndex(item => item === frequency);\n\n    if (alreadySelected >= 0) {\n      const filtered = frequencyFilterSelected.filter(item => item !== frequency);\n      setfrequencyFilterSelected(filtered);\n    } else {\n      setfrequencyFilterSelected(prev => [...prev, frequency]);\n    }\n  };\n\n  const handleMonthSelected = month => {\n    try {\n      const parseMonth = Number(month);\n      setMonthSelected(parseMonth);\n    } catch (error) {\n      throw new Error('invalid month value; Is accept 0 - 12.');\n    }\n  };\n\n  const handleYearSelected = year => {\n    try {\n      const parseYear = Number(year);\n      setYearSelected(parseYear);\n    } catch (error) {\n      throw new Error('invalid Year value');\n    }\n  };\n\n  const {\n    isShown,\n    toggle\n  } = useModal();\n  useEffect(() => {\n    const filteredDate = pageData.data.filter(item => {\n      const date = new Date(item.date);\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      return month === monthSelect && year === yearSelect && frequencyFilterSelected.includes(item.frequency);\n    });\n    const formattedData = filteredDate.map(item => {\n      return {\n        id: String(Math.random() * filteredDate.length),\n        description: item.description,\n        amountFormatted: formatCurrent(Number(item.amount)),\n        frequency: item.frequency,\n        dateFormatted: formatDate(item.date),\n        tagColor: item.frequency === 'recorrente' ? '#4e41f0' : '#e44c4e'\n      };\n    });\n    setData(formattedData);\n  }, [pageData.data, monthSelect, yearSelect, frequencyFilterSelected]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ContentHeader, {\n      title: pageData.title,\n      lineColor: pageData.lineColor,\n      children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n        options: months,\n        onChange: e => handleMonthSelected(e.target.value),\n        defaultValue: monthSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        options: years,\n        onChange: e => handleYearSelected(e.target.value),\n        defaultValue: yearSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(AddButton, {\n        children: \"Adicoinar novo Fluxo Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddFlowModal, {\n        isModalVisible: isShown,\n        hideModal: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `tag-filter tag-filter-recurrent\n                    ${frequencyFilterSelected.includes('recorrente') && 'tag-actived'}`,\n        onClick: () => handleFrequencyClick('recorrente'),\n        children: \"Recorrentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `tag-filter tag-filter-eventual\n                    ${frequencyFilterSelected.includes('eventual') && 'tag-actived'}`,\n        onClick: () => handleFrequencyClick('eventual'),\n        children: \"Eventuais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(HistoryFinanceCard, {\n        tagColor: item.tagColor,\n        title: item.description,\n        subtitle: item.dateFormatted,\n        amount: item.amountFormatted\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(List, \"GrKc+0WwTUcL/YcIOeXsxAPGrFY=\", false, function () {\n  return [useParams, useModal];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/joao/Desktop/dashboard/minha-carteira/src/pages/List/index.tsx"],"names":["React","useMemo","useState","useEffect","Container","Content","Filters","AddButtonContainer","ContentHeader","SelectInput","HistoryFinanceCard","AddButton","gains","expenses","formatCurrent","formatDate","AddFlowModal","useModal","useParams","List","data","setData","monthSelect","setMonthSelected","Date","getMonth","yearSelect","setYearSelected","getFullYear","frequencyFilterSelected","setfrequencyFilterSelected","params","pageData","type","title","lineColor","months","value","label","years","handleFrequencyClick","frequency","alreadySelected","findIndex","item","filtered","filter","prev","handleMonthSelected","month","parseMonth","Number","error","Error","handleYearSelected","year","parseYear","isShown","toggle","filteredDate","date","includes","formattedData","map","id","String","Math","random","length","description","amountFormatted","amount","dateFormatted","tagColor","e","target"],"mappings":"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","sourcesContent":["\r\nimport React, {useMemo, useState, useEffect} from 'react';\r\n\r\nimport { Container, Content, Filters, AddButtonContainer } from './styles';\r\n\r\nimport ContentHeader from '../../components/ContentHeader';\r\nimport SelectInput from '../../components/SelectInput';\r\nimport HistoryFinanceCard from '../../components/HistoryFinanceCard';\r\nimport AddButton from '../../components/AddButton';\r\n\r\nimport gains from '../../repositories/gains';\r\nimport expenses from '../../repositories/expenses';\r\n\r\nimport formatCurrent from '../../utils/formatCurrent';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\nimport AddFlowModal from '../../components/AddFlowModal';\r\nimport { useModal } from '../../components/AddFlowModal/useModal';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\ninterface IData {\r\n    id: string;\r\n    description: string;\r\n    amountFormatted: string;\r\n    frequency: string;\r\n    dateFormatted: string;\r\n    tagColor: string;\r\n};\r\n\r\nconst List: React.FC = () => {\r\n\r\n    const [data, setData] = useState<IData[]>([]);\r\n    const [monthSelect, setMonthSelected] = useState<number>(new Date().getMonth() + 1);\r\n    const [yearSelect, setYearSelected] = useState<number>(new Date().getFullYear());\r\n    const [frequencyFilterSelected, setfrequencyFilterSelected] = useState(['recorrente', 'eventual']);\r\n\r\n    let params = useParams();\r\n\r\n    const pageData = useMemo(() => {\r\n        return params.type === 'entry-balance' ?\r\n        {\r\n            title: 'Entradas',\r\n            lineColor: '#4e41f0',\r\n            data: gains\r\n        }\r\n        :\r\n        {\r\n            title: 'Saídas',\r\n            lineColor: '#e44c4e',\r\n            data: expenses\r\n        }\r\n    }, [params.type]);\r\n\r\n    const months = [\r\n        {value: 1, label: 'Janeiro'},\r\n        {value: 2, label: 'Fevereiro'},\r\n        {value: 3, label: 'Março'},\r\n        {value: 4, label: 'Abril'},\r\n        {value: 5, label: 'Maio'},\r\n        {value: 6, label: 'Junho'},\r\n        {value: 7, label: 'Julho'},\r\n        {value: 8, label: 'Agosto'},\r\n        {value: 9, label: 'Setembro'},\r\n        {value: 10, label: 'Outubro'},\r\n        {value: 11, label: 'Março'},\r\n        {value: 12, label: 'Dezembro'},\r\n    ]\r\n\r\n    const years = [\r\n        {value: 2021, label: 2021},\r\n        {value: 2020, label: 2020},\r\n        {value: 2022, label: 2022},\r\n    ];\r\n\r\n    const handleFrequencyClick = (frequency: string) => {\r\n\r\n        const alreadySelected = frequencyFilterSelected.findIndex(item => item === frequency);\r\n\r\n        if(alreadySelected >= 0){\r\n            const filtered = frequencyFilterSelected.filter(item => item !== frequency);\r\n            setfrequencyFilterSelected(filtered);\r\n        } else {\r\n            setfrequencyFilterSelected((prev) => [...prev, frequency]);\r\n        }   \r\n    };\r\n\r\n    const handleMonthSelected = (month : string) => {\r\n        try {\r\n            const parseMonth = Number(month);\r\n            setMonthSelected(parseMonth);\r\n        } catch (error) {\r\n            throw new Error('invalid month value; Is accept 0 - 12.');\r\n        }\r\n    };\r\n\r\n    const handleYearSelected = (year : string) => {\r\n        try {\r\n            const parseYear = Number(year);\r\n            setYearSelected(parseYear);\r\n        } catch (error) {\r\n            throw new Error('invalid Year value');\r\n        }\r\n    };\r\n\r\n    const { isShown, toggle } = useModal();\r\n\r\n    useEffect(() => {\r\n\r\n        const filteredDate = pageData.data.filter(item => {\r\n\r\n            const date = new Date(item.date);\r\n            const month = date.getMonth() + 1;\r\n            const year = date.getFullYear();\r\n\r\n            return month === monthSelect && year === yearSelect && frequencyFilterSelected.includes(item.frequency);\r\n        });\r\n\r\n        const formattedData = filteredDate.map(item => {\r\n\r\n            return {\r\n                id: String(Math.random() * filteredDate.length),\r\n                description: item.description,\r\n                amountFormatted: formatCurrent(Number(item.amount)),\r\n                frequency: item.frequency,\r\n                dateFormatted: formatDate(item.date),\r\n                tagColor: item.frequency === 'recorrente' ? '#4e41f0' : '#e44c4e'\r\n            }\r\n        })\r\n        setData(formattedData);\r\n    },[pageData.data, monthSelect, yearSelect, frequencyFilterSelected]);\r\n\r\n    return (\r\n        <Container>\r\n            <ContentHeader title={pageData.title} lineColor={pageData.lineColor}>\r\n                <SelectInput\r\n                    options={months}\r\n                    onChange={(e) => handleMonthSelected(e.target.value)}\r\n                    defaultValue={monthSelect}\r\n                />\r\n                <SelectInput\r\n                    options={years}\r\n                    onChange={(e) => handleYearSelected(e.target.value)}\r\n                    defaultValue={yearSelect}\r\n                />\r\n            </ContentHeader>\r\n\r\n            <AddButtonContainer>\r\n                <AddButton>Adicoinar novo Fluxo Financeiro</AddButton>\r\n                <AddFlowModal\r\n                    isModalVisible={isShown}\r\n                    hideModal={toggle}\r\n                />\r\n                    \r\n            </AddButtonContainer>\r\n\r\n            <Filters>\r\n                <button \r\n                    type=\"button\"\r\n                    className={`tag-filter tag-filter-recurrent\r\n                    ${frequencyFilterSelected.includes('recorrente') && 'tag-actived'}`}\r\n                    onClick={() => handleFrequencyClick('recorrente')}\r\n                >\r\n                    Recorrentes\r\n                </button>\r\n                <button \r\n                    type=\"button\"\r\n                    className={`tag-filter tag-filter-eventual\r\n                    ${frequencyFilterSelected.includes('eventual') && 'tag-actived'}`}\r\n                    onClick={() => handleFrequencyClick('eventual')}\r\n                >\r\n                    Eventuais\r\n                </button>\r\n            </Filters>\r\n\r\n            <Content>\r\n                {\r\n                    data.map(item => (\r\n                        <HistoryFinanceCard\r\n                            key={item.id}\r\n                            tagColor={item.tagColor}\r\n                            title={item.description}\r\n                            subtitle={item.dateFormatted}\r\n                            amount={item.amountFormatted}\r\n                        />\r\n                    ))\r\n                    \r\n                }\r\n            </Content>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}