{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PICHAU\\\\Desktop\\\\estudosProg\\\\dashboard\\\\minha-carteira\\\\src\\\\pages\\\\Dashboard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport WalletBox from '../../components/WalletBox';\nimport { Container, Content } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [monthSelect, setMonthSelected] = useState(new Date().getMonth() + 1);\n  const [yearSelect, setYearSelected] = useState(new Date().getFullYear());\n\n  const handleMonthSelected = month => {\n    try {\n      const parseMonth = Number(month);\n      setMonthSelected(parseMonth);\n    } catch (error) {\n      throw new Error('invalid month value; Is accept 0 - 12.');\n    }\n  };\n\n  const handleYearSelected = year => {\n    try {\n      const parseYear = Number(year);\n      setYearSelected(parseYear);\n    } catch (error) {\n      throw new Error('invalid Year value');\n    }\n  };\n\n  const months = [{\n    value: 1,\n    label: 'Janeiro'\n  }, {\n    value: 2,\n    label: 'Fevereiro'\n  }, {\n    value: 3,\n    label: 'Março'\n  }, {\n    value: 4,\n    label: 'Abril'\n  }, {\n    value: 5,\n    label: 'Maio'\n  }, {\n    value: 6,\n    label: 'Junho'\n  }, {\n    value: 7,\n    label: 'Julho'\n  }, {\n    value: 8,\n    label: 'Agosto'\n  }, {\n    value: 9,\n    label: 'Setembro'\n  }, {\n    value: 10,\n    label: 'Outubro'\n  }, {\n    value: 11,\n    label: 'Março'\n  }, {\n    value: 12,\n    label: 'Dezembro'\n  }];\n  const years = [{\n    value: 2021,\n    label: 2021\n  }, {\n    value: 2020,\n    label: 2020\n  }, {\n    value: 2022,\n    label: 2022\n  }];\n  const options = [{\n    value: 'Godoy',\n    label: 'Godoy'\n  }, {\n    value: 'Nath',\n    label: 'Nath'\n  }, {\n    value: 'Mari',\n    label: 'Mari'\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ContentHeader, {\n      title: \"Dashboard\",\n      lineColor: \"#f7931b\",\n      children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n        options: months,\n        onChange: e => handleMonthSelected(e.target.value),\n        defaultValue: monthSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        options: years,\n        onChange: e => handleYearSelected(e.target.value),\n        defaultValue: yearSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(WalletBox, {\n        title: \"Saldo\",\n        amount: 150.00,\n        footerLabel: \"atualizado com base\",\n        icon: \"dolar\",\n        color: \"#4e41f0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WalletBox, {\n        title: \"Entradas\",\n        amount: 5000.00,\n        footerLabel: \"entradas\",\n        icon: \"arrowUp\",\n        color: \"#f7931b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WalletBox, {\n        title: \"Sa\\xEDdas\",\n        amount: 4850.00,\n        footerLabel: \"Sa\\xEDdas\",\n        icon: \"arrowDown\",\n        color: \"#e44c4e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"TeG5UL4iP9Iq4kYqqyYpqGA+Zt4=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/PICHAU/Desktop/estudosProg/dashboard/minha-carteira/src/pages/Dashboard/index.tsx"],"names":["React","useState","ContentHeader","SelectInput","WalletBox","Container","Content","Dashboard","monthSelect","setMonthSelected","Date","getMonth","yearSelect","setYearSelected","getFullYear","handleMonthSelected","month","parseMonth","Number","error","Error","handleYearSelected","year","parseYear","months","value","label","years","options","e","target"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nimport ContentHeader from '../../components/ContentHeader';\r\nimport SelectInput from '../../components/SelectInput';\r\nimport WalletBox from '../../components/WalletBox';\r\n\r\nimport expenses from '../../repositories/expenses';\r\nimport gains from '../../repositories/gains';\r\n\r\nimport {\r\n    Container,\r\n    Content,\r\n} from './styles';\r\n\r\nconst Dashboard: React.FC = () => {\r\n\r\n    const [monthSelect, setMonthSelected] = useState<number>(new Date().getMonth() + 1);\r\n    const [yearSelect, setYearSelected] = useState<number>(new Date().getFullYear());\r\n\r\n    const handleMonthSelected = (month : string) => {\r\n        try {\r\n            const parseMonth = Number(month);\r\n            setMonthSelected(parseMonth);\r\n        } catch (error) {\r\n            throw new Error('invalid month value; Is accept 0 - 12.');\r\n        }\r\n    };\r\n\r\n    const handleYearSelected = (year : string) => {\r\n        try {\r\n            const parseYear = Number(year);\r\n            setYearSelected(parseYear);\r\n        } catch (error) {\r\n            throw new Error('invalid Year value');\r\n        }\r\n    };\r\n\r\n    const months = [\r\n        {value: 1, label: 'Janeiro'},\r\n        {value: 2, label: 'Fevereiro'},\r\n        {value: 3, label: 'Março'},\r\n        {value: 4, label: 'Abril'},\r\n        {value: 5, label: 'Maio'},\r\n        {value: 6, label: 'Junho'},\r\n        {value: 7, label: 'Julho'},\r\n        {value: 8, label: 'Agosto'},\r\n        {value: 9, label: 'Setembro'},\r\n        {value: 10, label: 'Outubro'},\r\n        {value: 11, label: 'Março'},\r\n        {value: 12, label: 'Dezembro'},\r\n    ]\r\n\r\n    const years = [\r\n        {value: 2021, label: 2021},\r\n        {value: 2020, label: 2020},\r\n        {value: 2022, label: 2022},\r\n    ];\r\n\r\n    const options = [\r\n        {value: 'Godoy', label: 'Godoy'},\r\n        {value: 'Nath', label: 'Nath'},\r\n        {value: 'Mari', label: 'Mari'},\r\n    ]\r\n\r\n    return (\r\n        <Container>\r\n            <ContentHeader title=\"Dashboard\" lineColor='#f7931b'>\r\n                <SelectInput\r\n                    options={months}\r\n                    onChange={(e) => handleMonthSelected(e.target.value)}\r\n                    defaultValue={monthSelect}\r\n                />\r\n                <SelectInput\r\n                    options={years}\r\n                    onChange={(e) => handleYearSelected(e.target.value)}\r\n                    defaultValue={yearSelect}\r\n                />\r\n            </ContentHeader>\r\n\r\n            <Content>\r\n                <WalletBox\r\n                    title=\"Saldo\"\r\n                    amount={150.00}\r\n                    footerLabel=\"atualizado com base\"\r\n                    icon=\"dolar\"\r\n                    color=\"#4e41f0\"\r\n                />\r\n\r\n                <WalletBox\r\n                    title=\"Entradas\"\r\n                    amount={5000.00}\r\n                    footerLabel=\"entradas\"\r\n                    icon=\"arrowUp\"\r\n                    color=\"#f7931b\"\r\n                />\r\n\r\n                <WalletBox\r\n                    title=\"Saídas\"\r\n                    amount={4850.00}\r\n                    footerLabel=\"Saídas\"\r\n                    icon=\"arrowDown\"\r\n                    color=\"#e44c4e\"\r\n                />\r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}