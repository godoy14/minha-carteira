{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PICHAU\\\\Desktop\\\\estudosProg\\\\dashboard\\\\minha-carteira\\\\src\\\\pages\\\\Dashboard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport { Container } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [monthSelect, setMonthSelected] = useState(new Date().getMonth() + 1);\n  const [yearSelect, setYearSelected] = useState(new Date().getFullYear());\n\n  const handleMonthSelected = month => {\n    try {\n      const parseMonth = Number(month);\n      setMonthSelected(parseMonth);\n    } catch (error) {\n      throw new Error('invalid month value; Is accept 0 - 12.');\n    }\n  };\n\n  const handleYearSelected = year => {\n    try {\n      const parseYear = Number(year);\n      setYearSelected(parseYear);\n    } catch (error) {\n      throw new Error('invalid Year value');\n    }\n  };\n\n  const options = [{\n    value: 'Godoy',\n    label: 'Godoy'\n  }, {\n    value: 'Nath',\n    label: 'Nath'\n  }, {\n    value: 'Mari',\n    label: 'Mari'\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ContentHeader, {\n      title: \"Dashboard\",\n      lineColor: \"#fff\",\n      children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n        options: months,\n        onChange: e => handleMonthSelected(e.target.value),\n        defaultValue: monthSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        options: years,\n        onChange: e => handleYearSelected(e.target.value),\n        defaultValue: yearSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"TeG5UL4iP9Iq4kYqqyYpqGA+Zt4=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/PICHAU/Desktop/estudosProg/dashboard/minha-carteira/src/pages/Dashboard/index.tsx"],"names":["React","useState","ContentHeader","SelectInput","Container","Dashboard","monthSelect","setMonthSelected","Date","getMonth","yearSelect","setYearSelected","getFullYear","handleMonthSelected","month","parseMonth","Number","error","Error","handleYearSelected","year","parseYear","options","value","label","months","e","target","years"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAGA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,WAAD,EAAcC,gBAAd,IAAkCN,QAAQ,CAAS,IAAIO,IAAJ,GAAWC,QAAX,KAAwB,CAAjC,CAAhD;AACA,QAAM,CAACC,UAAD,EAAaC,eAAb,IAAgCV,QAAQ,CAAS,IAAIO,IAAJ,GAAWI,WAAX,EAAT,CAA9C;;AAEA,QAAMC,mBAAmB,GAAIC,KAAD,IAAoB;AAC5C,QAAI;AACA,YAAMC,UAAU,GAAGC,MAAM,CAACF,KAAD,CAAzB;AACAP,MAAAA,gBAAgB,CAACQ,UAAD,CAAhB;AACH,KAHD,CAGE,OAAOE,KAAP,EAAc;AACZ,YAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACH;AACJ,GAPD;;AASA,QAAMC,kBAAkB,GAAIC,IAAD,IAAmB;AAC1C,QAAI;AACA,YAAMC,SAAS,GAAGL,MAAM,CAACI,IAAD,CAAxB;AACAT,MAAAA,eAAe,CAACU,SAAD,CAAf;AACH,KAHD,CAGE,OAAOJ,KAAP,EAAc;AACZ,YAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACH;AACJ,GAPD;;AASA,QAAMI,OAAO,GAAG,CACZ;AAACC,IAAAA,KAAK,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADY,EAEZ;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFY,EAGZ;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHY,CAAhB;AAMA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC,WAArB;AAAiC,MAAA,SAAS,EAAC,MAA3C;AAAA,8BACI,QAAC,WAAD;AACI,QAAA,OAAO,EAAEC,MADb;AAEI,QAAA,QAAQ,EAAGC,CAAD,IAAOb,mBAAmB,CAACa,CAAC,CAACC,MAAF,CAASJ,KAAV,CAFxC;AAGI,QAAA,YAAY,EAAEjB;AAHlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,WAAD;AACI,QAAA,OAAO,EAAEsB,KADb;AAEI,QAAA,QAAQ,EAAGF,CAAD,IAAOP,kBAAkB,CAACO,CAAC,CAACC,MAAF,CAASJ,KAAV,CAFvC;AAGI,QAAA,YAAY,EAAEb;AAHlB;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA7CD;;GAAML,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nimport ContentHeader from '../../components/ContentHeader';\r\nimport SelectInput from '../../components/SelectInput';\r\n\r\n\r\nimport { Container } from './styles';\r\n\r\nconst Dashboard: React.FC = () => {\r\n\r\n    const [monthSelect, setMonthSelected] = useState<number>(new Date().getMonth() + 1);\r\n    const [yearSelect, setYearSelected] = useState<number>(new Date().getFullYear());\r\n\r\n    const handleMonthSelected = (month : string) => {\r\n        try {\r\n            const parseMonth = Number(month);\r\n            setMonthSelected(parseMonth);\r\n        } catch (error) {\r\n            throw new Error('invalid month value; Is accept 0 - 12.');\r\n        }\r\n    };\r\n\r\n    const handleYearSelected = (year : string) => {\r\n        try {\r\n            const parseYear = Number(year);\r\n            setYearSelected(parseYear);\r\n        } catch (error) {\r\n            throw new Error('invalid Year value');\r\n        }\r\n    };\r\n\r\n    const options = [\r\n        {value: 'Godoy', label: 'Godoy'},\r\n        {value: 'Nath', label: 'Nath'},\r\n        {value: 'Mari', label: 'Mari'},\r\n    ]\r\n\r\n    return (\r\n        <Container>\r\n            <ContentHeader title=\"Dashboard\" lineColor='#fff'>\r\n                <SelectInput\r\n                    options={months}\r\n                    onChange={(e) => handleMonthSelected(e.target.value)}\r\n                    defaultValue={monthSelect}\r\n                />\r\n                <SelectInput\r\n                    options={years}\r\n                    onChange={(e) => handleYearSelected(e.target.value)}\r\n                    defaultValue={yearSelect}\r\n                />\r\n            </ContentHeader>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}