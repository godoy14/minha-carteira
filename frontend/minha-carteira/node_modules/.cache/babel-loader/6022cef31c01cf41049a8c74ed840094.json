{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PICHAU\\\\Desktop\\\\minha-carteira\\\\frontend\\\\minha-carteira\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\PICHAU\\\\Desktop\\\\minha-carteira\\\\frontend\\\\minha-carteira\\\\src\\\\pages\\\\Dashboard\\\\index.tsx\";\n\nimport React, { useState, useMemo, useCallback } from 'react';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport WalletBox from '../../components/WalletBox';\nimport MessageBox from '../../components/MessageBox';\nimport PieChartBox from '../../components/PieChartBox';\nimport HistoryBox from '../../components/HistoryBox';\nimport BarChartBox from '../../components/BarChartBox';\nimport happyImg from \"../../assets/happy.svg\";\nimport sadImg from \"../../assets/sad.svg\";\nimport grinningImg from \"../../assets/grinning.svg\";\nimport expenses from '../../repositories/expenses';\nimport gains from '../../repositories/gains';\nimport listOfMonths from '../../utils/months';\nimport { Container, Content } from './styles';\n\nvar Dashboard = function Dashboard() {\n  var _useState = useState(new Date().getMonth() + 1),\n      _useState2 = _slicedToArray(_useState, 2),\n      monthSelect = _useState2[0],\n      setMonthSelected = _useState2[1];\n\n  var _useState3 = useState(new Date().getFullYear()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      yearSelect = _useState4[0],\n      setYearSelected = _useState4[1];\n\n  var handleMonthSelected = useCallback(function (month) {\n    try {\n      var parseMonth = Number(month);\n      setMonthSelected(parseMonth);\n    } catch (error) {\n      throw new Error('invalid month value; Is accept 0 - 12.');\n    }\n  }, []);\n  var handleYearSelected = useCallback(function (year) {\n    try {\n      var parseYear = Number(year);\n      setYearSelected(parseYear);\n    } catch (error) {\n      throw new Error('invalid Year value');\n    }\n  }, []);\n  var months = [{\n    value: 1,\n    label: 'Janeiro'\n  }, {\n    value: 2,\n    label: 'Fevereiro'\n  }, {\n    value: 3,\n    label: 'Março'\n  }, {\n    value: 4,\n    label: 'Abril'\n  }, {\n    value: 5,\n    label: 'Maio'\n  }, {\n    value: 6,\n    label: 'Junho'\n  }, {\n    value: 7,\n    label: 'Julho'\n  }, {\n    value: 8,\n    label: 'Agosto'\n  }, {\n    value: 9,\n    label: 'Setembro'\n  }, {\n    value: 10,\n    label: 'Outubro'\n  }, {\n    value: 11,\n    label: 'Novembro'\n  }, {\n    value: 12,\n    label: 'Dezembro'\n  }];\n  var years = [{\n    value: 2021,\n    label: 2021\n  }, {\n    value: 2020,\n    label: 2020\n  }, {\n    value: 2022,\n    label: 2022\n  }];\n  var totalExpenses = useMemo(function () {\n    var total = 0;\n    expenses.forEach(function (item) {\n      var date = new Date(item.date);\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n\n      if (month === monthSelect && year === yearSelect) {\n        try {\n          total += Number(item.amount);\n        } catch (_unused) {\n          throw new Error('Invalid amount!');\n        }\n      }\n    });\n    return total;\n  }, [monthSelect, yearSelect]);\n  var totalGains = useMemo(function () {\n    var total = 0;\n    gains.forEach(function (item) {\n      var date = new Date(item.date);\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n\n      if (month === monthSelect && year === yearSelect) {\n        try {\n          total += Number(item.amount);\n        } catch (_unused2) {\n          throw new Error('Invalid amount!');\n        }\n      }\n    });\n    return total;\n  }, [monthSelect, yearSelect]);\n  var totalBalance = useMemo(function () {\n    return totalGains - totalExpenses;\n  }, [totalGains, totalExpenses]);\n  var message = useMemo(function () {\n    if (totalBalance < 0) {\n      return {\n        title: \"Que triste!\",\n        description: \"Nesse mës vocë gastou mais do que deveria!\",\n        footerText: \"Verifique seus gastos.\",\n        icon: sadImg\n      };\n    } else if (totalExpenses === 0 && totalGains === 0) {\n      return {\n        title: \"Ops!\",\n        description: \"Neste mês, não há registros!!\",\n        footerText: \"Nenhum registro cadastrado esse mês.\",\n        icon: grinningImg\n      };\n    } else if (totalBalance === 0) {\n      return {\n        title: \"Ufa!\",\n        description: \"Quase Hein!!\",\n        footerText: \"Tenha cuidado.\",\n        icon: grinningImg\n      };\n    } else {\n      return {\n        title: \"Muito bem!\",\n        description: \"Sua carteira fechou positiva!\",\n        footerText: \"Continue assim.\",\n        icon: happyImg\n      };\n    }\n  }, [totalBalance, totalExpenses, totalBalance]);\n  var relationExpensesVersusGains = useMemo(function () {\n    var total = totalGains + totalExpenses;\n    var percentGains = Number((totalGains / total * 100).toFixed(1));\n    var percentExpenses = Number((totalExpenses / total * 100).toFixed(1));\n    var data = [{\n      name: \"Entradas\",\n      value: totalGains,\n      percent: percentGains ? percentGains : 0,\n      color: '#e44c4e'\n    }, {\n      name: \"Saídas\",\n      value: totalExpenses,\n      percent: percentExpenses ? percentExpenses : 0,\n      color: '#f7931b'\n    }];\n    return data;\n  }, [totalGains, totalExpenses]);\n  var historyData = useMemo(function () {\n    return listOfMonths.map(function (_, month) {\n      var amountEntry = 0;\n      gains.forEach(function (gain) {\n        var date = new Date(gain.date);\n        var gainMonth = date.getMonth();\n        var gainYear = date.getFullYear();\n\n        if (gainMonth === month && gainYear === yearSelect) {\n          try {\n            amountEntry += Number(gain.amount);\n          } catch (_unused3) {\n            throw new Error('amountEntry is invalid!');\n          }\n        }\n      });\n      var amountOutput = 0;\n      gains.forEach(function (expense) {\n        var date = new Date(expense.date);\n        var expenseMonth = date.getMonth() + 1;\n        var expenseYear = date.getFullYear();\n\n        if (expenseMonth === month && expenseYear === yearSelect) {\n          try {\n            amountOutput += Number(expense.amount);\n          } catch (_unused4) {\n            throw new Error('amountOutput is invalid!');\n          }\n        }\n      });\n      return {\n        monthNumber: month,\n        month: listOfMonths[month].substr(0, 3),\n        amountEntry: amountEntry,\n        amountOutput: amountOutput\n      };\n    }).filter(function (item) {\n      var currentMonth = new Date().getMonth();\n      var currentYear = new Date().getFullYear();\n      return yearSelect === currentYear && item.monthNumber <= currentMonth || yearSelect < currentYear;\n    });\n  }, [yearSelect]);\n  var relationExpensesRecurrentVersusEventual = useMemo(function () {\n    var amountRecurrent = 0;\n    var amountEventual = 0;\n    expenses.filter(function (expense) {\n      var date = new Date(expense.date);\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      return month === monthSelect && year === yearSelect;\n    }).forEach(function (expense) {\n      if (expense.frequency === 'recorrente') {\n        return amountRecurrent += Number(expense.amount);\n      }\n\n      if (expense.frequency === 'eventual') {\n        return amountEventual += Number(expense.amount);\n      }\n    });\n    var total = amountRecurrent + amountEventual;\n    var recurrentPercent = Number((amountRecurrent / total * 100).toFixed(1));\n    var eventualPercent = Number((amountEventual / total * 100).toFixed(1));\n    return [{\n      name: \"Recorrentes\",\n      amount: amountRecurrent,\n      percent: recurrentPercent ? recurrentPercent : 0,\n      color: \"#f7931b\"\n    }, {\n      name: \"Eventuais\",\n      amount: amountEventual,\n      percent: eventualPercent ? eventualPercent : 0,\n      color: \"#e44c4e\"\n    }];\n  }, [monthSelect, yearSelect]);\n  var relationGainsRecurrentVersusEventual = useMemo(function () {\n    var amountRecurrent = 0;\n    var amountEventual = 0;\n    gains.filter(function (gain) {\n      var date = new Date(gain.date);\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      return month === monthSelect && year === yearSelect;\n    }).forEach(function (gain) {\n      if (gain.frequency === 'recorrente') {\n        return amountRecurrent += Number(gain.amount);\n      }\n\n      if (gain.frequency === 'eventual') {\n        return amountEventual += Number(gain.amount);\n      }\n    });\n    var total = amountRecurrent + amountEventual;\n    var recurrentPercent = Number((amountRecurrent / total * 100).toFixed(1));\n    var eventualPercent = Number((amountEventual / total * 100).toFixed(1));\n    return [{\n      name: \"Recorrentes\",\n      amount: amountRecurrent,\n      percent: recurrentPercent ? recurrentPercent : 0,\n      color: \"#f7931b\"\n    }, {\n      name: \"Eventuais\",\n      amount: amountEventual,\n      percent: eventualPercent ? eventualPercent : 0,\n      color: \"#e44c4e\"\n    }];\n  }, [monthSelect, yearSelect]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ContentHeader, {\n    title: \"Dashboard\",\n    lineColor: \"#f7931b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectInput, {\n    options: months,\n    onChange: function onChange(e) {\n      return handleMonthSelected(e.target.value);\n    },\n    defaultValue: monthSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SelectInput, {\n    options: years,\n    onChange: function onChange(e) {\n      return handleYearSelected(e.target.value);\n    },\n    defaultValue: yearSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WalletBox, {\n    title: \"Saldo\",\n    amount: totalBalance,\n    footerLabel: \"atualizado com base\",\n    icon: \"dolar\",\n    color: \"#4e41f0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(WalletBox, {\n    title: \"Entradas\",\n    amount: totalGains,\n    footerLabel: \"entradas\",\n    icon: \"arrowUp\",\n    color: \"#f7931b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(WalletBox, {\n    title: \"Sa\\xEDdas\",\n    amount: totalExpenses,\n    footerLabel: \"Sa\\xEDdas\",\n    icon: \"arrowDown\",\n    color: \"#e44c4e\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MessageBox, {\n    title: message.title,\n    description: message.description,\n    footerText: message.footerText,\n    icon: message.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PieChartBox, {\n    data: relationExpensesVersusGains,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(HistoryBox, {\n    data: historyData,\n    lineColorAmountEntry: \"#f7931b\",\n    lineColorAmountOutout: \"#e44c4e\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(BarChartBox, {\n    data: relationExpensesRecurrentVersusEventual,\n    title: \"Sa\\xEDdas\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(BarChartBox, {\n    data: relationGainsRecurrentVersusEventual,\n    title: \"Entradas\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useMemo","useCallback","ContentHeader","SelectInput","WalletBox","MessageBox","PieChartBox","HistoryBox","BarChartBox","expenses","gains","listOfMonths","Container","Content","Dashboard","Date","getMonth","monthSelect","setMonthSelected","getFullYear","yearSelect","setYearSelected","handleMonthSelected","month","parseMonth","Number","error","Error","handleYearSelected","year","parseYear","months","value","label","years","totalExpenses","total","forEach","item","date","amount","totalGains","totalBalance","message","title","description","footerText","icon","sadImg","grinningImg","happyImg","relationExpensesVersusGains","percentGains","toFixed","percentExpenses","data","name","percent","color","historyData","map","_","amountEntry","gain","gainMonth","gainYear","amountOutput","expense","expenseMonth","expenseYear","monthNumber","substr","filter","currentMonth","currentYear","relationExpensesRecurrentVersusEventual","amountRecurrent","amountEventual","frequency","recurrentPercent","eventualPercent","relationGainsRecurrentVersusEventual","e","target"],"sources":["C:/Users/PICHAU/Desktop/minha-carteira/frontend/minha-carteira/src/pages/Dashboard/index.tsx"],"sourcesContent":["\r\nimport React, { useState, useMemo, useCallback } from 'react';\r\n\r\nimport ContentHeader from '../../components/ContentHeader';\r\nimport SelectInput from '../../components/SelectInput';\r\nimport WalletBox from '../../components/WalletBox';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport PieChartBox from '../../components/PieChartBox';\r\nimport HistoryBox from '../../components/HistoryBox';\r\nimport BarChartBox from '../../components/BarChartBox';\r\n\r\nimport happyImg from '../../assets/happy.svg';\r\nimport sadImg from '../../assets/sad.svg';\r\nimport grinningImg from '../../assets/grinning.svg';\r\n\r\nimport expenses from '../../repositories/expenses';\r\nimport gains from '../../repositories/gains';\r\n\r\nimport listOfMonths from '../../utils/months';\r\n\r\nimport {\r\n    Container,\r\n    Content,\r\n} from './styles';\r\n\r\nconst Dashboard: React.FC = () => {\r\n\r\n    const [monthSelect, setMonthSelected] = useState<number>(new Date().getMonth() + 1);\r\n    const [yearSelect, setYearSelected] = useState<number>(new Date().getFullYear());\r\n\r\n    const handleMonthSelected = useCallback((month : string) => {\r\n        try {\r\n            const parseMonth = Number(month);\r\n            setMonthSelected(parseMonth);\r\n        } catch (error) {\r\n            throw new Error('invalid month value; Is accept 0 - 12.');\r\n        }\r\n    }, []);\r\n\r\n    const handleYearSelected = useCallback((year : string) => {\r\n        try {\r\n            const parseYear = Number(year);\r\n            setYearSelected(parseYear);\r\n        } catch (error) {\r\n            throw new Error('invalid Year value');\r\n        }\r\n    }, []);\r\n\r\n    const months = [\r\n        {value: 1, label: 'Janeiro'},\r\n        {value: 2, label: 'Fevereiro'},\r\n        {value: 3, label: 'Março'},\r\n        {value: 4, label: 'Abril'},\r\n        {value: 5, label: 'Maio'},\r\n        {value: 6, label: 'Junho'},\r\n        {value: 7, label: 'Julho'},\r\n        {value: 8, label: 'Agosto'},\r\n        {value: 9, label: 'Setembro'},\r\n        {value: 10, label: 'Outubro'},\r\n        {value: 11, label: 'Novembro'},\r\n        {value: 12, label: 'Dezembro'},\r\n    ];\r\n\r\n    const years = [\r\n        {value: 2021, label: 2021},\r\n        {value: 2020, label: 2020},\r\n        {value: 2022, label: 2022},\r\n    ];\r\n\r\n    const totalExpenses = useMemo(() => {\r\n        let total: number = 0;\r\n\r\n        expenses.forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            if(month === monthSelect && year === yearSelect){\r\n                try {\r\n                    total += Number(item.amount);\r\n                }catch{\r\n                    throw new Error('Invalid amount!');\r\n                }\r\n            }\r\n        });\r\n\r\n        return total;\r\n    },[monthSelect, yearSelect]);\r\n\r\n    const totalGains = useMemo(() => {\r\n        let total: number = 0;\r\n\r\n        gains.forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            if(month === monthSelect && year === yearSelect){\r\n                try {\r\n                    total += Number(item.amount);\r\n                }catch{\r\n                    throw new Error('Invalid amount!');\r\n                }\r\n            }\r\n        });\r\n\r\n        return total;\r\n    },[monthSelect, yearSelect]);\r\n\r\n    const totalBalance = useMemo(() => {\r\n        return totalGains - totalExpenses;\r\n    }, [totalGains, totalExpenses]);\r\n\r\n    const message = useMemo(() => {\r\n        if(totalBalance < 0){\r\n            return {\r\n                title: \"Que triste!\",\r\n                description:\"Nesse mës vocë gastou mais do que deveria!\",\r\n                footerText:\"Verifique seus gastos.\",\r\n                icon:sadImg\r\n            }\r\n        }\r\n        else if(totalExpenses === 0 && totalGains ===0) {\r\n            return {\r\n                title: \"Ops!\",\r\n                description:\"Neste mês, não há registros!!\",\r\n                footerText:\"Nenhum registro cadastrado esse mês.\",\r\n                icon:grinningImg\r\n            }\r\n        }\r\n        else if(totalBalance === 0){\r\n            return {\r\n                title: \"Ufa!\",\r\n                description:\"Quase Hein!!\",\r\n                footerText:\"Tenha cuidado.\",\r\n                icon:grinningImg\r\n            }\r\n        }\r\n        else{\r\n            return {\r\n                title: \"Muito bem!\",\r\n                description:\"Sua carteira fechou positiva!\",\r\n                footerText:\"Continue assim.\",\r\n                icon:happyImg\r\n            }\r\n        }\r\n    }, [totalBalance, totalExpenses, totalBalance]);\r\n\r\n    const relationExpensesVersusGains = useMemo(() => {\r\n        const total = totalGains + totalExpenses;\r\n\r\n        const percentGains = Number(((totalGains / total) * 100).toFixed(1));\r\n        const percentExpenses = Number(((totalExpenses / total) * 100).toFixed(1));\r\n\r\n        const data = [\r\n            {\r\n                name: \"Entradas\",\r\n                value: totalGains,\r\n                percent: percentGains ? percentGains : 0,\r\n                color: '#e44c4e'\r\n            },\r\n            {\r\n                name: \"Saídas\",\r\n                value: totalExpenses,\r\n                percent: percentExpenses ? percentExpenses : 0,\r\n                color: '#f7931b'\r\n            }\r\n        ];\r\n\r\n        return data;\r\n    },[totalGains, totalExpenses]);\r\n\r\n    const historyData = useMemo(() => {\r\n        return listOfMonths.map((_, month ) => {\r\n            let amountEntry = 0;\r\n            gains.forEach(gain => {\r\n                const date = new Date(gain.date);\r\n                const gainMonth = date.getMonth();\r\n                const gainYear = date.getFullYear();\r\n\r\n                if(gainMonth === month && gainYear === yearSelect){\r\n                    try {\r\n                        amountEntry += Number(gain.amount);\r\n                    } catch {\r\n                        throw new Error('amountEntry is invalid!')\r\n                    }\r\n                }\r\n            });\r\n\r\n            let amountOutput = 0;\r\n            gains.forEach(expense => {\r\n                const date = new Date(expense.date);\r\n                const expenseMonth = date.getMonth() + 1;\r\n                const expenseYear = date.getFullYear();\r\n\r\n                if(expenseMonth === month && expenseYear === yearSelect){\r\n                    try {\r\n                        amountOutput += Number(expense.amount);\r\n                    } catch {\r\n                        throw new Error('amountOutput is invalid!')\r\n                    }\r\n                }\r\n            });\r\n\r\n            return {\r\n                monthNumber: month,\r\n                month: listOfMonths[month].substr(0,3),\r\n                amountEntry,\r\n                amountOutput\r\n            }\r\n        }).filter(item => {\r\n            const currentMonth = new Date().getMonth();\r\n            const currentYear = new Date().getFullYear();\r\n\r\n            return (yearSelect === currentYear && item.monthNumber <= currentMonth) || (yearSelect < currentYear)\r\n        })\r\n    },[yearSelect]);\r\n\r\n    const relationExpensesRecurrentVersusEventual = useMemo(() => {\r\n        let amountRecurrent = 0;\r\n        let amountEventual = 0;\r\n\r\n        expenses\r\n        .filter((expense) => {\r\n            const date = new Date(expense.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            return month === monthSelect && year === yearSelect;\r\n        })\r\n        .forEach((expense) => {\r\n            if(expense.frequency === 'recorrente'){\r\n                return amountRecurrent += Number(expense.amount);\r\n            }\r\n\r\n            if(expense.frequency === 'eventual'){\r\n                return amountEventual += Number(expense.amount);\r\n            }\r\n        });\r\n\r\n        const total = amountRecurrent + amountEventual;\r\n\r\n        const recurrentPercent = Number(((amountRecurrent / total) * 100).toFixed(1));\r\n        const eventualPercent = Number(((amountEventual / total) * 100).toFixed(1));\r\n\r\n        return [\r\n            {\r\n                name: \"Recorrentes\",\r\n                amount: amountRecurrent,\r\n                percent: recurrentPercent ? recurrentPercent : 0,\r\n                color: \"#f7931b\"\r\n            },\r\n            {\r\n                name: \"Eventuais\",\r\n                amount: amountEventual,\r\n                percent: eventualPercent ? eventualPercent : 0,\r\n                color: \"#e44c4e\"\r\n            }\r\n        ]\r\n    },[monthSelect, yearSelect]);\r\n\r\n    const relationGainsRecurrentVersusEventual = useMemo(() => {\r\n        let amountRecurrent = 0;\r\n        let amountEventual = 0;\r\n\r\n        gains\r\n        .filter((gain) => {\r\n            const date = new Date(gain.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            return month === monthSelect && year === yearSelect;\r\n        })\r\n        .forEach((gain) => {\r\n            if(gain.frequency === 'recorrente'){\r\n                return amountRecurrent += Number(gain.amount);\r\n            }\r\n\r\n            if(gain.frequency === 'eventual'){\r\n                return amountEventual += Number(gain.amount);\r\n            }\r\n        });\r\n\r\n        const total = amountRecurrent + amountEventual;\r\n\r\n        const recurrentPercent = Number(((amountRecurrent / total) * 100).toFixed(1));\r\n        const eventualPercent = Number(((amountEventual / total) * 100).toFixed(1));\r\n\r\n        return [\r\n            {\r\n                name: \"Recorrentes\",\r\n                amount: amountRecurrent,\r\n                percent: recurrentPercent ? recurrentPercent : 0,\r\n                color: \"#f7931b\"\r\n            },\r\n            {\r\n                name: \"Eventuais\",\r\n                amount: amountEventual,\r\n                percent: eventualPercent ? eventualPercent : 0,\r\n                color: \"#e44c4e\"\r\n            }\r\n        ]\r\n    },[monthSelect, yearSelect]);\r\n\r\n    return (\r\n        <Container>\r\n            <ContentHeader title=\"Dashboard\" lineColor='#f7931b'>\r\n                <SelectInput\r\n                    options={months}\r\n                    onChange={(e) => handleMonthSelected(e.target.value)}\r\n                    defaultValue={monthSelect}\r\n                />\r\n                <SelectInput\r\n                    options={years}\r\n                    onChange={(e) => handleYearSelected(e.target.value)}\r\n                    defaultValue={yearSelect}\r\n                />\r\n            </ContentHeader>\r\n\r\n            <Content>\r\n                <WalletBox\r\n                    title=\"Saldo\"\r\n                    amount={totalBalance}\r\n                    footerLabel=\"atualizado com base\"\r\n                    icon=\"dolar\"\r\n                    color=\"#4e41f0\"\r\n                />\r\n\r\n                <WalletBox\r\n                    title=\"Entradas\"\r\n                    amount={totalGains}\r\n                    footerLabel=\"entradas\"\r\n                    icon=\"arrowUp\"\r\n                    color=\"#f7931b\"\r\n                />\r\n\r\n                <WalletBox\r\n                    title=\"Saídas\"\r\n                    amount={totalExpenses}\r\n                    footerLabel=\"Saídas\"\r\n                    icon=\"arrowDown\"\r\n                    color=\"#e44c4e\"\r\n                />\r\n\r\n                <MessageBox\r\n                    title= {message.title}\r\n                    description={message.description}\r\n                    footerText={message.footerText}\r\n                    icon={message.icon}\r\n                />\r\n\r\n                <PieChartBox data={relationExpensesVersusGains} />\r\n\r\n                <HistoryBox \r\n                    data={historyData}\r\n                    lineColorAmountEntry=\"#f7931b\"\r\n                    lineColorAmountOutout=\"#e44c4e\"\r\n                />\r\n\r\n                <BarChartBox\r\n                    data={relationExpensesRecurrentVersusEventual}\r\n                    title=\"Saídas\" \r\n                />\r\n\r\n                <BarChartBox\r\n                    data={relationGainsRecurrentVersusEventual}\r\n                    title=\"Entradas\" \r\n                />\r\n                \r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}