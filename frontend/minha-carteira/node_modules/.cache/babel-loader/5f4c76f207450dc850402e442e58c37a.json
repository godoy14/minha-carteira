{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joao\\\\Desktop\\\\dashboard\\\\minha-carteira\\\\src\\\\components\\\\AddFlowModal\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Button from \"../Button\";\nimport Input from \"../input\";\nimport DatePicker from \"react-datepicker\";\nimport { ModalContainer, ModalHeader, CloseButton, CloseSign, Form } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddFlowModal = _ref => {\n  _s();\n\n  let {\n    isModalVisible,\n    hideModal\n  } = _ref;\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [flowType, setFlowType] = useState('');\n  const [frequency, setFrequency] = useState('');\n  const [flowDate, setFlowDate] = useState(new Date());\n\n  const modal = /*#__PURE__*/_jsxDEV(ModalContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Insira as informa\\xE7\\xF5es a seguir para adicionar um Novo Fluxo Financeiro!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n        children: /*#__PURE__*/_jsxDEV(CloseSign, {\n          onClick: hideModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Descri\\xE7\\xE3o\",\n        required: true,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Valor\",\n        required: true,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFlowType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"entry\",\n          children: \"Entrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"exit\",\n          children: \"Sa\\xEDda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFrequency(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"recurrent\",\n          children: \"Recorrente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"eventual\",\n          children: \"Eventual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: \"date\",\n        onChange: date => setFlowDate(date),\n        showTimeSelect: true,\n        dateFormat: \"Pp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n\n  return isModalVisible ? /*#__PURE__*/ReactDOM.createPortal(modal, document.body) : null;\n};\n\n_s(AddFlowModal, \"8X5SuZ5NY9s19vOa3yxE8KGaQbg=\");\n\n_c = AddFlowModal;\nexport default AddFlowModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFlowModal\");","map":{"version":3,"sources":["C:/Users/joao/Desktop/dashboard/minha-carteira/src/components/AddFlowModal/index.tsx"],"names":["React","useState","ReactDOM","Button","Input","DatePicker","ModalContainer","ModalHeader","CloseButton","CloseSign","Form","AddFlowModal","isModalVisible","hideModal","description","setDescription","amount","setAmount","flowType","setFlowType","frequency","setFrequency","flowDate","setFlowDate","Date","modal","e","target","value","date","createPortal","document","body"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM  from 'react-dom';\r\nimport Button from \"../Button\";\r\nimport Input from \"../input\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport {\r\n    ModalContainer,\r\n    ModalHeader,\r\n    CloseButton,\r\n    CloseSign,\r\n    Form,\r\n} from './styles';\r\n\r\ninterface IModalProps {\r\n    isModalVisible: boolean;\r\n    hideModal: () => void;\r\n}\r\n\r\nconst AddFlowModal: React.FC<IModalProps> = ({\r\n    isModalVisible,\r\n    hideModal\r\n}) => {\r\n\r\n    const [description, setDescription] =useState<string>('');\r\n    const [amount, setAmount] = useState<string>('');\r\n    const [flowType, setFlowType] = useState<string>('');\r\n    const [frequency, setFrequency] = useState<string>('');\r\n    const [flowDate, setFlowDate] = useState(new Date());\r\n\r\n    const modal = (\r\n        <ModalContainer>\r\n            <ModalHeader>\r\n                <p>Insira as informações a seguir para adicionar um Novo Fluxo Financeiro!</p>\r\n                <CloseButton>\r\n                    <CloseSign onClick={hideModal}/>\r\n                </CloseButton>\r\n            </ModalHeader>\r\n\r\n            <Form>\r\n                <Input\r\n                    type='text'\r\n                    placeholder='Descrição'\r\n                    required\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n\r\n                <Input\r\n                    type='text'\r\n                    placeholder='Valor'\r\n                    required\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n\r\n                <select onChange={(e) => setFlowType(e.target.value)}>\r\n                    <option value='entry'>Entrada</option>\r\n                    <option value='exit'>Saída</option>\r\n                </select>\r\n\r\n                <select onChange={(e) => setFrequency(e.target.value)}>\r\n                    <option value='recurrent'>Recorrente</option>\r\n                    <option value='eventual'>Eventual</option>\r\n                </select>\r\n\r\n                <DatePicker\r\n                    selected='date'\r\n                    onChange={(date:Date) => setFlowDate(date)}\r\n                    showTimeSelect\r\n                    dateFormat=\"Pp\"\r\n                />\r\n\r\n                <Button type='submit'>Enviar</Button>\r\n            </Form>\r\n        </ModalContainer>\r\n    );\r\n\r\n    return isModalVisible ? ReactDOM.createPortal(modal, document.body) : null;\r\n}\r\n\r\nexport default AddFlowModal;"]},"metadata":{},"sourceType":"module"}